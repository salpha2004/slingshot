#include <stdio.h>
#include <stdlib.h>
#include <fstream>
#include <iostream>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <errno.h>
#include <unistd.h>

#include <FUNC_HEADER>
#include <signal.h>
#include <iostream>

#include "HEADER_NAME.h"

rtems_task ___TEST_CASE_NAME_ID (rtems_task_argument argument)
{
  /* rval (return value) is used to detect Silent and Hindering failure
   * modes. not used in this stage, so has been commented out. */
#if 0
  RETURN_VAL
#endif

  S_CALLS
  COMMIT_CALLS

  /* rval (return value) is used to detect Silent and Hindering failure
   * modes. not used in this stage, so has been commented out. */
#if 0
  VALUE_RETURN FUN_NAME(TEMP);
#endif
  FUN_NAME(TEMP);
  CLEANUP_CALLS

  /* rval (return value) is used to detect Silent and Hindering failure
   * modes. not used in this stage, so has been commented out. */
#if 0
  OUTPUT
#endif
    
  /* used by testcase_executer to know when the test has finished.
   * this flag is used as a replacement to Linux process monitoring api.
   */
  tc_finished = true;
  /* free resources taken by this task. */
  rtems_task_delete (RTEMS_SELF);
}
